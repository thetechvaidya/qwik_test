I have the following verification comments after thorough review and exploration of the codebase. Implement the comments by following the instructions in the comments verbatim:

---
## Comment 1: Exam result route mismatches constant and GoRoute path causing 404 on navigation.

Update `lib/core/router/app_router.dart`:
- Replace the nested `GoRoute` under `':examId'` from `path: '/exam-result/:examId'` to `path: 'result'`.
- Keep `name: 'exam-result'`.
- Remove any leading `/` so it composes to `/exams/:examId/result`.
- Verify `goToExamResult` and `pushExamResult` generate the same URL.

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\router\app_router.dart
---
## Comment 2: DashboardPage requires DashboardBloc but no provider or DI registration exists.

Implement DI and provider:
1) Register Dashboard data sources, repository, use cases, and then:
```
sl.registerFactory<DashboardBloc>(() => DashboardBloc(
  getDashboardData: sl<GetDashboardData>(),
  getUserStats: sl<GetUserStats>(),
  getAchievements: sl<GetAchievements>(),
  getRecentActivities: sl<GetRecentActivities>(),
  getPerformanceTrends: sl<GetPerformanceTrends>(),
  updateAchievementProgress: sl<UpdateAchievementProgress>(),
  unlockAchievement: sl<UnlockAchievement>(),
  dashboardRepository: sl<DashboardRepository>(),
));
```
2) Provide it. E.g., in router builder for `home`:
```
builder: (context, state) => BlocProvider(
  create: (_) => sl<DashboardBloc>()..add(LoadDashboardData(userId: userId)),
  child: DashboardPage(userId: userId),
)
```

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\dashboard\presentation\pages\dashboard_page.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\di\service_locator.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\router\app_router.dart
---
## Comment 3: ProfilePage/EditProfilePage depend on ProfileBloc without provider/DI and edit page has compile error.

Do the following:
- In `service_locator.dart`, register Profile repository/use cases and:
```
sl.registerFactory<ProfileBloc>(() => ProfileBloc(
  getUserProfileUseCase: sl<GetUserProfileUseCase>(),
  updateUserProfileUseCase: sl<UpdateUserProfileUseCase>(),
  uploadAvatarUseCase: sl<UploadAvatarUseCase>(),
  getUserStatsUseCase: sl<GetUserStatsUseCase>(),
  getSubscriptionInfoUseCase: sl<GetSubscriptionInfoUseCase>(),
));
```
- Wrap `ProfilePage` and `EditProfilePage` with `BlocProvider(create: (_) => sl<ProfileBloc>())` in router.
- In `EditProfilePage._saveProfile()`, replace `widget.profile` with `_currentProfile!` and guard against null:
```
if (_currentProfile == null) return;
final updatedProfile = _currentProfile!.copyWith(
  name: _nameController.text.trim(),
  email: _emailController.text.trim(),
  bio: _bioController.text.trim().isEmpty ? null : _bioController.text.trim(),
);
```


### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\profile\presentation\pages\profile_page.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\profile\presentation\pages\edit_profile_page.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\di\service_locator.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\router\app_router.dart
---
## Comment 4: SettingsPage uses SettingsBloc but no provider exists in widget tree.

Wrap `SettingsPage` with a provider in router:
```
builder: (context, state) => BlocProvider(
  create: (_) => sl<SettingsBloc>()..add(const SettingsLoadRequested(userId: 'current_user')),
  child: const SettingsPage(),
)
```
Optionally add a top-level MultiBlocProvider in `main.dart` if you want it globally.

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\settings\presentation\pages\settings_page.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\router\app_router.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\di\service_locator.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\main.dart
---
## Comment 5: ThemeBloc is used in main.dart but not registered in DI, causing startup crash.

Register ThemeBloc in `service_locator.dart`:
```
sl.registerFactory<ThemeBloc>(() => ThemeBloc());
```
Or, construct it directly in `main.dart` without DI:
```
BlocProvider(create: (_) => ThemeBloc()),
```

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\main.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\di\service_locator.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\settings\presentation\bloc\theme_bloc.dart
---
## Comment 6: ForgotPasswordPage is stubbed; does not call API, contrary to simplified plan.

Implement real reset:
- Add `requestPasswordReset(email)` to `AuthRemoteDataSource` and repository.
- Expose a simple use case (optional) or call repository from the page via a small Cubit.
- Replace delay with:
```
final success = await context.read<AuthBloc>().requestPasswordReset(_emailController.text);
```
- Show success/error accordingly.

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\authentication\presentation\pages\forgot_password_page.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\authentication\data\datasources\auth_remote_datasource.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\authentication\presentation\bloc\auth_bloc.dart
---
## Comment 7: AnswerOptionsWidget supports only MCQ/TF; ensure backend does not send unsupported types.

Add a pre-check when starting a session (in `ExamSessionBloc` after loading questions):
- If any question has a type not in {singleChoice, multipleChoice, trueFalse}, emit a user-friendly error and prevent starting.
- Alternatively, hide unsupported type labels in `QuestionContentWidget` when types are unsupported.

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\exam_session\presentation\widgets\answer_options_widget.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\exam_session\presentation\widgets\question_content_widget.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\exam_session\presentation\bloc\exam_session_bloc.dart
---
## Comment 8: Router guard includes biometric state in simplified scope; remove unused complexity.

Update `AppRouter` to remove biometric-related branch and any references. Also verify `AuthBloc` no longer emits `AuthBiometricAuthRequired`. Clean related constants/strings if present.

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\router\app_router.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\features\authentication\presentation\bloc\auth_state.dart
---
## Comment 9: Firebase initialization kept; confirm minimal analytics-only scope or remove per plan.

If not required:
- Remove firebase_analytics, crashlytics, performance from `pubspec.yaml` and related code.
- Simplify `FirebaseService` initialization or guard it behind a feature flag.
If required:
- Note in README that analytics/crash reporting are intentionally retained.

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\main.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\services\firebase_service.dart
- c:\Users\goela\Desktop\Trie\mobile-app\pubspec.yaml
- c:\Users\goela\Desktop\Trie\mobile-app\README.md
---
## Comment 10: AppConstants.baseUrl is hardcoded; ensure alignment with MOBILE_API_DOCUMENTATION.md

Update configuration:
- Move base URL to env/config (e.g., `.env` or build-time flavors).
- Ensure `core/network/api_endpoints.dart` composes base + `/api/mobile` correctly.
- Document in README how to set base URL per environment.

### Referred Files
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\constants\app_constants.dart
- c:\Users\goela\Desktop\Trie\mobile-app\lib\core\network\api_endpoints.dart
- c:\Users\goela\Desktop\Trie\MOBILE_API_DOCUMENTATION.md
---
